{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Modal/Modal.module.css","redux/actionTypesDish.ts","redux/actionDish.ts","components/Navbar/NavbarBtn.tsx","components/Routes.ts","components/Navbar/DesktopMenu/Desktop.tsx","components/Navbar/HamburgerMenu/Hamburger.tsx","hooks/useWindowSize.ts","components/Navbar/Navbar.tsx","hooks/useTypeSecector.ts","components/DishCard/DishCardBtn.tsx","components/DishCard/DishCard.tsx","utils/localstorage.ts","components/Modal/Modal.tsx","views/Favourite.tsx","views/Home.tsx","views/NotFound.tsx","App.tsx","redux/reducerDish.ts","redux/store.ts","index.tsx","components/DishCard/DishCard.module.css","components/Navbar/HamburgerMenu/Hamburger.module.css"],"names":["module","exports","actionType","getDish","dispatch","a","type","LOADING","payload","fetch","path","url","then","res","json","GET_DISH","meals","catch","err","ERROR","finally","addToFavourite","dish","ADD_TO_FAVOURITE","toggleModal","currentStateModalWindow","TOGGLE_MODAL","NavbarBtn","useDispatch","onClick","className","styles","navbarBtn","Routes","home","favourite","Desktop","location","useLocation","wrapNavbar","wrapLinkBtn","navbarLinkBox","navbarLink","to","routes","pathname","Hamburger","menuBodyRef","useRef","menuBtnRef","wrapNavigation","menuBtn","ref","current","style","left","opacity","burgerBtnIcon","wrapMenu","burgerMenuCloseBtn","width","height","d","id","strokeWidth","stroke","fillRule","fill","burgerMenuItems","useWindowSize","React","useState","window","innerWidth","innerHeight","windowSize","setWindowSize","changeWindowSize","useEffect","addEventListener","removeEventListener","Navigation","useTypeSelector","useSelector","DishCardBtn","state","data","listFavouriteDish","wrapCardBtn","cardBtn","includes","DishCard","imgLink","title","instructions","wrapCard","cardBody","cardImg","src","length","noImage","alt","cardTitle","cardInstructions","setLocalstorage","localStorage","setItem","JSON","stringify","getLocalstorage","parse","getItem","map","Modal","dishTitle","setDishTitle","dishDescription","setDishDescription","refTitle","refDishDescription","backdrop","wrapModal","modal","wrapInput","inputDishTitle","placeholder","onChange","value","inputDescription","customDish","idMeal","Date","now","strMealThumb","strMeal","strInstructions","ADD_CUSTOM_DISH","addCustomDish","addBtn","Favourite","Home","loading","Spinner","animation","variant","NotFound","App","element","initialState","error","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f026aa9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapNavbar\":\"Navbar_wrapNavbar__30eOl\",\"wrapLinkBtn\":\"Navbar_wrapLinkBtn__3GrqK\",\"navbarLink\":\"Navbar_navbarLink__2ZhVP\",\"navbarBtn\":\"Navbar_navbarBtn__2CUG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3FAPo\",\"wrapModal\":\"Modal_wrapModal__1cCFU\",\"modal\":\"Modal_modal__P3_V5\",\"title\":\"Modal_title__kbqpq\",\"wrapInput\":\"Modal_wrapInput__1yDtk\",\"inputDishTitle\":\"Modal_inputDishTitle__3itdo\",\"inputDescription\":\"Modal_inputDescription__TMZGy\",\"addBtn\":\"Modal_addBtn__1cxb3\"};","export enum actionType {\n  GET_DISH = \"get/dish\",\n  ADD_TO_FAVOURITE = \"add/to/favourite\",\n  ADD_CUSTOM_DISH = \"add/custom/dish\",\n  TOGGLE_MODAL = \"tuggle/modal\",\n  LOADING = \"loading\",\n  ERROR = \"error\",\n}\n","import { Dispatch } from \"redux\";\nimport { getDishAction } from \"../interfaces/getDishInterface\";\nimport path from \"../utils/path.json\";\nimport { actionType } from \"./actionTypesDish\";\n\n// fetch dish\nexport const getDish = () => {\n  return async function (dispatch: Dispatch<getDishAction>) {\n    await dispatch({ type: actionType.LOADING, payload: true });\n    await fetch(path.url)\n      .then((res) => res.json())\n      .then((json) =>\n        dispatch({ type: actionType.GET_DISH, payload: json.meals })\n      )\n      .catch((err) => dispatch({ type: actionType.ERROR, payload: err }))\n      .finally(() => dispatch({ type: actionType.LOADING, payload: false }));\n  };\n};\n\nexport const addToFavourite = (dish: any[]) => {\n  return async function (dispatch: Dispatch<getDishAction>) {\n    await dispatch({ type: actionType.ADD_TO_FAVOURITE, payload: dish });\n  };\n};\n\nexport const addCustomDish = (customDish: any) => {\n  return async function (dispatch: Dispatch<getDishAction>) {\n    await dispatch({ type: actionType.ADD_CUSTOM_DISH, payload: customDish });\n  };\n};\n\nexport const toggleModal = (currentStateModalWindow: boolean) => {\n  return async function (dispatch: Dispatch<getDishAction>) {\n    await dispatch({\n      type: actionType.TOGGLE_MODAL,\n      payload: currentStateModalWindow,\n    });\n  };\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleModal } from \"../../redux/actionDish\";\n\nimport styles from \"./Navbar.module.css\";\n\nexport const NavbarBtn: React.FC = () => {\n  const dispatch = useDispatch();\n\n  //open modal window\n  const handleOpenModal = () => {\n    dispatch(toggleModal(true));\n  };\n\n  return (\n    <button onClick={handleOpenModal} className={styles.navbarBtn}>\n      Add custom dish\n    </button>\n  );\n};\n","let Routes = {\n  home: \"/dish/\",\n  favourite: \"/favourite\",\n};\n\nexport default Routes;\n","import { NavbarBtn } from \"../NavbarBtn\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport routes from \"../../Routes\";\n\nimport styles from \"../Navbar.module.css\";\n\nexport const Desktop: React.FC = () => {\n  const location = useLocation();\n  return (\n    <nav>\n      <div className={styles.wrapNavbar}>\n        <ul className={styles.wrapLinkBtn}>\n          <li className={styles.navbarLinkBox}>\n            <NavLink className={styles.navbarLink} to={routes.home}>\n              Random dish\n            </NavLink>\n          </li>\n          <li className={styles.navbarLinkBox}>\n            <NavLink className={styles.navbarLink} to={routes.favourite}>\n              Favourites\n            </NavLink>\n          </li>\n        </ul>\n        {location.pathname !== routes.home && <NavbarBtn />}\n      </div>\n    </nav>\n  );\n};\n","import React, { useRef } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport routes from \"../../Routes\";\n\nimport styles from \"./Hamburger.module.css\";\n\nexport const Hamburger: React.FC = () => {\n  const menuBodyRef = useRef<HTMLUListElement>(null);\n  const menuBtnRef = useRef<HTMLButtonElement>(null);\n\n  //open menu\n  const openBurregMenu = () => {\n    menuBodyRef.current!.style.left = \"0\";\n    menuBtnRef.current!.style.opacity = \"0\";\n  };\n\n  //close menu\n  const closeBurregMenu = () => {\n    menuBodyRef.current!.style.left = \"-300px\";\n    menuBtnRef.current!.style.opacity = \"100\";\n  };\n\n  return (\n    <nav className={styles.wrapNavigation}>\n      <button\n        className={styles.menuBtn}\n        type=\"button\"\n        ref={menuBtnRef}\n        onClick={openBurregMenu}\n      >\n        <span className={styles.burgerBtnIcon}></span>\n      </button>\n      <ul ref={menuBodyRef} className={styles.wrapMenu}>\n        <li>\n          <button\n            className={styles.burgerMenuCloseBtn}\n            onClick={closeBurregMenu}\n            type=\"button\"\n          >\n            <svg width=\"32\" height=\"32\">\n              <g>\n                <path\n                  d=\"m2,8l6,-6l8,8l8,-8l6,6l-8,8l8,8l-6,6l-8,-8l-8,8l-6,-6l8,-8l-8,-8z\"\n                  id=\"path1\"\n                  strokeWidth=\"2px\"\n                  stroke=\"#333333\"\n                  fillRule=\"evenodd\"\n                  fill=\"#777777\"\n                  opacity=\"0.75\"\n                />\n              </g>\n            </svg>\n          </button>\n        </li>\n        <li className={styles.burgerMenuItems}>\n          <NavLink className={styles.navbarLink} to={routes.home}>\n            Random dish\n          </NavLink>\n        </li>\n        <li className={styles.burgerMenuItems}>\n          <NavLink className={styles.navbarLink} to={routes.favourite}>\n            Favourites\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n","import React from \"react\";\n\nexport const useWindowSize = () => {\n  const [windowSize, setWindowSize] = React.useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  const changeWindowSize = () => {\n    setWindowSize({ width: window.innerWidth, height: window.innerHeight });\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", changeWindowSize);\n\n    return () => {\n      window.removeEventListener(\"resize\", changeWindowSize);\n    };\n  }, []);\n\n  return windowSize;\n};\n","import React from \"react\";\nimport { Desktop } from \"./DesktopMenu/Desktop\";\nimport { Hamburger } from \"./HamburgerMenu/Hamburger\";\nimport { useWindowSize } from \"../../hooks/useWindowSize\";\n\nexport const Navigation: React.FC = () => {\n  const { width } = useWindowSize();\n\n  return <header>{width > 762 ? <Desktop /> : <Hamburger />}</header>;\n};\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/store\";\nexport const useTypeSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useTypeSelector } from \"../../hooks/useTypeSecector\";\nimport { addToFavourite, getDish } from \"../../redux/actionDish\";\nimport styles from \"./DishCard.module.css\";\n\nexport const DishCardBtn: React.FC = () => {\n  const { data, listFavouriteDish } = useTypeSelector((state) => state.dish);\n  const dispatch = useDispatch();\n\n  //update dish\n  const handleGetDish = () => {\n    dispatch(getDish());\n  };\n\n  //add to favourite\n  const handleAddToFavourite = () => {\n    !listFavouriteDish.includes(data[0]) && dispatch(addToFavourite(data[0]));\n  };\n\n  return (\n    <div className={styles.wrapCardBtn}>\n      <button onClick={handleGetDish} className={styles.cardBtn}>\n        Skip\n      </button>\n      <button onClick={handleAddToFavourite} className={styles.cardBtn}>\n        Like\n      </button>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { DishCardBtn } from \"./DishCardBtn\";\nimport { dishCardProps } from \"../../interfaces/dishCardPropsInterface\";\nimport routes from \"../Routes\";\nimport path from \"../../utils/path.json\";\n\nimport styles from \"./DishCard.module.css\";\n\nexport const DishCard: React.FC<dishCardProps> = ({\n  imgLink,\n  title,\n  instructions,\n}) => {\n  const location = useLocation();\n  return (\n    <>\n      <div className={styles.wrapCard}>\n        <ul className={styles.cardBody}>\n          <li className={styles.cardImg}>\n            <img\n              className={styles.cardImg}\n              src={imgLink.length === 0 ? path.noImage : imgLink}\n              alt={imgLink}\n            />\n          </li>\n          <li className={styles.cardTitle}>{title}</li>\n          <li className={styles.cardInstructions}>{instructions}</li>\n        </ul>\n        {location.pathname === routes.home && <DishCardBtn />}\n      </div>\n    </>\n  );\n};\n","import { addToFavourite } from \"../redux/actionDish\";\n\nexport const setLocalstorage = (data: any) => {\n  localStorage.setItem(\"favouriteDish\", JSON.stringify(data));\n};\n\nexport const getLocalstorage = (\n  dispatch: Function,\n  listFavouriteDish: any[]\n) => {\n  const savedDish = JSON.parse(localStorage.getItem(\"favouriteDish\") || \"[]\");\n  savedDish.map((dish: any[]) => {\n    return (\n      listFavouriteDish.includes(dish) ||\n      (listFavouriteDish.length === 0 && dispatch(addToFavourite(dish)))\n    );\n  });\n};\n","import React, { useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useTypeSelector } from \"../../hooks/useTypeSecector\";\nimport { addCustomDish, toggleModal } from \"../../redux/actionDish\";\nimport { setLocalstorage } from \"../../utils/localstorage\";\nimport path from \"../../utils/path.json\";\n\nimport styles from \"./Modal.module.css\";\n\nexport const Modal: React.FC = () => {\n  const { listFavouriteDish } = useTypeSelector((state) => state.dish);\n  const [dishTitle, setDishTitle] = useState(\"\");\n  const [dishDescription, setDishDescription] = useState(\"\");\n  const refTitle = useRef<HTMLInputElement>(null);\n  const refDishDescription = useRef<HTMLTextAreaElement>(null);\n  const dispatch = useDispatch();\n\n  //title value\n  const handleTitle = () => {\n    setDishTitle(refTitle.current!.value);\n  };\n\n  //description value\n  const handleDishDescription = () => {\n    setDishDescription(refDishDescription.current!.value);\n  };\n\n  //add custom dish\n  const handleAddCustomDish = () => {\n    //custom dish body\n    const customDish = {\n      idMeal: Date.now(),\n      strMealThumb: path.noImage,\n      strMeal: dishTitle,\n      strInstructions: dishDescription,\n    };\n\n    //add custom dish to state\n    dispatch(addCustomDish(customDish));\n    //close modal window\n    dispatch(toggleModal(false));\n    //add to local storage\n    setLocalstorage([...listFavouriteDish, customDish]);\n  };\n\n  return (\n    <>\n      <div className={styles.backdrop}>\n        <div className={styles.wrapModal}>\n          <form className={styles.modal}>\n            <label className={styles.title}>\n              Add custom dish\n              <div className={styles.wrapInput}>\n                <input\n                  ref={refTitle}\n                  className={styles.inputDishTitle}\n                  type=\"text\"\n                  placeholder=\"Dish title\"\n                  onChange={handleTitle}\n                />\n                <textarea\n                  ref={refDishDescription}\n                  className={styles.inputDescription}\n                  placeholder=\"Dish description...\"\n                  onChange={handleDishDescription}\n                />\n                <button\n                  onClick={handleAddCustomDish}\n                  className={styles.addBtn}\n                  type=\"button\"\n                >\n                  Add custom dish\n                </button>\n              </div>\n            </label>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { DishCard } from \"../components/DishCard/DishCard\";\nimport { Modal } from \"../components/Modal/Modal\";\nimport { NavbarBtn } from \"../components/Navbar/NavbarBtn\";\nimport { useTypeSelector } from \"../hooks/useTypeSecector\";\nimport { useWindowSize } from \"../hooks/useWindowSize\";\nimport { getLocalstorage } from \"../utils/localstorage\";\n\nexport const Favourite: React.FC = () => {\n  const { listFavouriteDish, modal } = useTypeSelector((state) => state.dish);\n  const dispatch = useDispatch();\n  const { width } = useWindowSize();\n\n  useEffect(() => {\n    getLocalstorage(dispatch, listFavouriteDish);\n  }, [dispatch, listFavouriteDish]);\n\n  return (\n    <div className=\"justify-content-center\">\n      <div className=\"mt-5 d-flex flex-wrap p-2\">\n        {listFavouriteDish.length !== 0 &&\n          listFavouriteDish.map((dish) => (\n            <DishCard\n              key={dish.idMeal}\n              imgLink={dish.strMealThumb}\n              title={dish.strMeal}\n              instructions={dish.strInstructions}\n            />\n          ))}\n        {width < 762 && (\n          <div className=\"fixed-bottom bg-light wrapNavbarBtn\">\n            <NavbarBtn />\n          </div>\n        )}\n      </div>\n\n      {modal && <Modal />}\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { DishCard } from \"../components/DishCard/DishCard\";\nimport { useTypeSelector } from \"../hooks/useTypeSecector\";\nimport { getDish } from \"../redux/actionDish\";\nimport { getLocalstorage, setLocalstorage } from \"../utils/localstorage\";\n\nexport const Home = () => {\n  const { data, listFavouriteDish, loading } = useTypeSelector(\n    (state) => state.dish\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    data.length === 0 && dispatch(getDish());\n  }, [dispatch, data.length]);\n\n  useEffect(() => {\n    getLocalstorage(dispatch, listFavouriteDish);\n  }, [dispatch, listFavouriteDish]);\n\n  useEffect(() => {\n    setLocalstorage(listFavouriteDish);\n  }, [listFavouriteDish]);\n\n  return (\n    <>\n      <div className=\"d-flex justify-content-center flex-column align-items-center vh-100\">\n        {loading && (\n          <div className=\"Width 100% d-flex justify-content-center\">\n            <Spinner animation=\"grow\" variant=\"secondary\" />\n          </div>\n        )}\n        {data.length !== 0 && (\n          <DishCard\n            imgLink={data[0].strMealThumb}\n            title={data[0].strMeal}\n            instructions={data[0].strInstructions}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport Routes from \"../components/Routes\";\nimport { Link } from \"react-router-dom\";\n\nexport const NotFound: React.FC = () => {\n  return (\n    <div className=\"nopage\">\n      <h1 className=\"text404\">404</h1>\n      <p>{<Link to={{ pathname: `${Routes.home}` }}>HOME</Link>}</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { Navigation } from \"./components/Navbar/Navbar\";\nimport { Favourite } from \"./views/Favourite\";\nimport { Home } from \"./views/Home\";\nimport { NotFound } from \"./views/NotFound\";\nimport routes from \"./components/Routes\";\n\nexport const App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <Routes>\n        <Route path={routes.home} element={<Home />} />\n        <Route path={routes.favourite} element={<Favourite />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n","import { getDishAction } from \"../interfaces/getDishInterface\";\nimport { stateInterface } from \"../interfaces/stateInreface\";\nimport { actionType } from \"./actionTypesDish\";\n\nconst initialState: stateInterface = {\n  data: [],\n  listFavouriteDish: [],\n  modal: false,\n  loading: false,\n  error: null,\n};\n\nexport const reducerDish = (\n  state = initialState,\n  action: getDishAction\n): stateInterface => {\n  switch (action.type) {\n    case actionType.GET_DISH:\n      return {\n        data: action.payload,\n        listFavouriteDish: state.listFavouriteDish,\n        modal: state.modal,\n        loading: state.loading,\n        error: state.error,\n      };\n\n    case actionType.ADD_TO_FAVOURITE:\n      return {\n        data: state.data,\n        listFavouriteDish: [...state.listFavouriteDish, action.payload],\n        modal: state.modal,\n        loading: state.loading,\n        error: state.error,\n      };\n    case actionType.ADD_CUSTOM_DISH:\n      return {\n        data: state.data,\n        listFavouriteDish: [...state.listFavouriteDish, action.payload],\n        modal: state.modal,\n        loading: state.loading,\n        error: state.error,\n      };\n\n    case actionType.TOGGLE_MODAL:\n      return {\n        data: state.data,\n        listFavouriteDish: state.listFavouriteDish,\n        modal: action.payload,\n        loading: state.loading,\n        error: state.error,\n      };\n\n    case actionType.LOADING:\n      return {\n        data: state.data,\n        listFavouriteDish: state.listFavouriteDish,\n        modal: state.modal,\n        loading: action.payload,\n        error: state.error,\n      };\n\n    case actionType.ERROR:\n      return {\n        data: state.data,\n        listFavouriteDish: state.listFavouriteDish,\n        modal: state.modal,\n        loading: state.loading,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { applyMiddleware, createStore, combineReducers } from \"redux\";\nimport { reducerDish } from \"./reducerDish\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nlet rootReducer = combineReducers({\n  dish: reducerDish,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapCard\":\"DishCard_wrapCard__1siQ2\",\"cardBody\":\"DishCard_cardBody__1vlTD\",\"cardImg\":\"DishCard_cardImg__2028o\",\"cardTitle\":\"DishCard_cardTitle__2To6f\",\"cardInstructions\":\"DishCard_cardInstructions__P5tCz\",\"wrapCardBtn\":\"DishCard_wrapCardBtn__QQFyy\",\"cardBtn\":\"DishCard_cardBtn__os8xQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapNavigation\":\"Hamburger_wrapNavigation__2jK3c\",\"wrapMenu\":\"Hamburger_wrapMenu__1T5fQ\",\"menuBtn\":\"Hamburger_menuBtn__8EMQO\",\"burgerBtnIcon\":\"Hamburger_burgerBtnIcon__dt7y7\",\"burgerMenuCloseBtn\":\"Hamburger_burgerMenuCloseBtn__2BCA0\",\"burgerMenuItems\":\"Hamburger_burgerMenuItems__16218\"};"],"sourceRoot":""}